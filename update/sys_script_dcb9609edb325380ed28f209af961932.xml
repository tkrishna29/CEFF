<?xml version="1.0" encoding="UTF-8"?>
<record_update sys_domain="global" table="sys_script">
    <sys_script action="INSERT_OR_UPDATE">
        <abort_action>false</abort_action>
        <access>package_private</access>
        <action_delete>false</action_delete>
        <action_insert>true</action_insert>
        <action_query>false</action_query>
        <action_update>false</action_update>
        <active>true</active>
        <add_message>false</add_message>
        <advanced>true</advanced>
        <change_fields>false</change_fields>
        <client_callable>false</client_callable>
        <collection>x_grs_ceff_headers</collection>
        <condition/>
        <description/>
        <execute_function>false</execute_function>
        <filter_condition/>
        <is_rest>false</is_rest>
        <message/>
        <name> Update Headers</name>
        <order>50</order>
        <priority>100</priority>
        <rest_method/>
        <rest_method_text/>
        <rest_service/>
        <rest_service_text/>
        <rest_variables/>
        <role_conditions/>
        <script><![CDATA[(function executeRule(current, previous /*null when async*/) {
	// Add your code here
	
	
	var str = current.acp_id;
	var nomatch = [];
	var acp = str.split(",");
	current.total_crew = acp.length;

	//Check matching ACPs
	for (var i = 0; i < acp.length; i++) {
		
		var hdata = new GlideRecord('x_grs_ceff_headers');
		hdata.addQuery('acp_id', "CONTAINS", acp[i]);
		hdata.query();
		
		if(hdata.next()){
		//Do nothing
		}
		
		else{
		nomatch.push(acp[i]);
		}
	}
	
	

	if(nomatch.length == 0)
		abrt();
	else
	create(nomatch);
		
})(current, previous);

function create(nm){
		gs.info("Getting into create headers");
		var gr = new GlideRecord('x_grs_ceff_data');
		var startDate = GlideDateTime();
		var endDate = GlideDateTime();
		
//Build New ACP string
	    var acps = '';
		for (var i = 0; i < nm.length; i++)
			{
			acps = (acps + "," + nm[i]);
		}
	    current.acp_id = acps.replace(/^,/, '');
	
	    current.total_crew = nm.length;
		gr.query('u_acpid', nm[0]);
		gr.query();
		
		if(gr.next()){
			
			current.evaluator_email = gr.u_eval_email;
			current.evaluator_firstname = gr.u_eval_fname;
			current.evaluator_lastname =gr.u_eval_lname;
			current.evaluator_oracle_id = gr.u_eval_oid;
			current.evaluator_middle_name = gr.u_eval_mname;
			current.evaluator_eid = gr.u_eval_eid;
			current.evaluator_title = gr.u_titlename;
			current.nomatch = 
			current.hr_manager_eid = gr.u_hrmgr_eid;
			current.hr_manager_first_name = gr.u_hrmgr_fname;
			current.hr_manager_last_name = gr.u_hrmgr_lname;
			current.hr_manager_oracle_id = gr.u_hrmgr_oid;
			current.hr_manager_middle_name = gr.u_hrmgr_mname;
			current.hr_manager = gr.u_hrmgr_email;
			current.owner_eid = gr.u_owner_eid;
			current.owner_email = gr.u_owner_email;
			current.owner_first_name = gr.u_owner_fname;
			current.owner_last_name = gr.u_owner_lname;
			current.owner_oracle_id = gr.u_owner_oid;
			
			current.physical_address = gr.u_phys_addr;
			current.physical_address_2 = gr.u_phys_addr2;
			current.physical_city = gr.u_phys_city;
			current.physical_state = gr.u_phys_state;
			current.physical_zip = gr.u_phys_zip;
			current.country = gr.u_p_country;
			current.site_id = gr.u_siteid;
			current.site_name = gr.u_sitename;
			
			current.resource_manager_eid = gr.u_rmgr_eid;
			current.resource_manager_email = gr.u_rmgr_email;
			current.resource_manager_first_name = gr.u_rmgr_fname;
			current.resource_manager_last_name = gr.u_rmgr_lname;
			current.resource_manager_middle_name = gr.u_rmgr_mname;
			current.resource_manager_oracle_id = gr.u_rmgr_oid;
			
			current.service_manager_eid = gr.u_smgr_eid;
			current.service_manager_email = gr.u_smgr_email;
			current.service_manager_first_name = gr.u_smgr_fname;
			current.service_manager_last_name = gr.u_smgr_lname;
			current.service_manager_middle_name = gr.u_smgr_mname;
			current.service_manager_oracle_id = gr.u_smgr_oid;
			current.home_office = gr.u_name;
			current.home_office_id = gr.u_officeid;
			
			startDate =  getStartDate();
			endDate = getEndDate();
			current.review_period_from = startDate;
			//current.review_period_from = gr.u_start_date;
			current.review_period_to = endDate;
			
		}
		
	}
	

function abrt()
{
	//gs.info("Getting into abort");
	current.setAbortAction(true);
}

function getStartDate(){
	var gr = new GlideRecord ('x_grs_ceff_data');
	var astr = current.acp_id;
	var acpArray = astr.split(',');
	var sdate = '';
	for (var i = 0; i < acpArray.length; i++)  {
		
		var aid = acpArray[i];
		gr.get('u_acpid', aid);
		do{
			if (i == 0)
				{
				sdate = gr.u_start_date;
				//gs.info(sdate);
			}
			else
				{
				var gdt1 = GlideDateTime(sdate);
				var gdt2 = GlideDateTime(gr.u_start_date);
				if(gdt1 >= gdt2)
					sdate = gdt2;
			}
		}while(gr.next());
		
		
	}
	return sdate;
}

function getEndDate(){
	var gr = new GlideRecord('x_grs_ceff_data');
	var astr = current.acp_id;
	var acpArray = astr.split(',');
	var edate = '';
	for (var i = 0; i < acpArray.length; i++)  {
		
		var aid = acpArray[i];
		gr.get('u_acpid', aid);
		do{
			if (i == 0)
				{
				
				edate = gr.u_end_date;
			}
			else
				{
				var gdt1 = GlideDateTime(edate);
				var gdt2 = GlideDateTime(gr.u_end_date);
				if(gdt1 <= gdt2)
					edate = gdt2;
				
			}
			
		}while(gr.next());
		
		//current.total_crew = i+1;
		
	}
	
	return edate;
	
	
}]]></script>
        <sys_class_name>sys_script</sys_class_name>
        <sys_created_by>Raghu.Kumar</sys_created_by>
        <sys_created_on>2018-06-21 18:09:20</sys_created_on>
        <sys_customer_update>false</sys_customer_update>
        <sys_domain>global</sys_domain>
        <sys_domain_path>/</sys_domain_path>
        <sys_id>dcb9609edb325380ed28f209af961932</sys_id>
        <sys_mod_count>68</sys_mod_count>
        <sys_name> Update Headers</sys_name>
        <sys_overrides/>
        <sys_package display_value="Crew/Employee Feedback Form" source="x_grs_ceff">7ee8bb8edb765b408a08f35aaf9619dd</sys_package>
        <sys_policy/>
        <sys_replace_on_upgrade>false</sys_replace_on_upgrade>
        <sys_scope display_value="Crew/Employee Feedback Form">7ee8bb8edb765b408a08f35aaf9619dd</sys_scope>
        <sys_update_name>sys_script_dcb9609edb325380ed28f209af961932</sys_update_name>
        <sys_updated_by>a1</sys_updated_by>
        <sys_updated_on>2018-10-16 19:53:41</sys_updated_on>
        <template>status=Sent^EQ</template>
        <when>before</when>
    </sys_script>
    <sys_translated_text action="delete_multiple" query="documentkey=dcb9609edb325380ed28f209af961932"/>
</record_update>
